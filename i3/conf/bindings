# # # # # # # #
# = Windows = #
# # # # # # # # 



# Modifier
set $mod Mod4

# change focus
bindsym $mod+k focus up
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Up focus up
bindsym $mod+Down focus down
bindsym $mod+Left focus left
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+k move up
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Right move right

# change container layout (stacked, tabbed, toggle split)

bindsym $mod+apostrophe layout stacking
bindsym $mod+q layout tabbed

# toggle between vertical and horizontal split
bindsym $mod+Shift+apostrophe layout toggle split

bindsym $mod+Ctrl+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This    will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# # # # # # # # # # # # # #
# = Workspaces Bindings = #
# # # # # # # # # # # # # #



# Define names for default workspaces
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"


# move focused container to workspace
# ; , . p
bindsym $mod+Shift+semicolon move container to workspace number $ws1; workspace $ws1; exec --no-startup-id notify-send "Moved to $ws1" -t 1000
bindsym $mod+Shift+comma move container to workspace number $ws2; workspace $ws2; exec --no-startup-id notify-send "Moved to $ws2" -t 1000
bindsym $mod+Shift+period move container to workspace number $ws3; workspace $ws3; exec --no-startup-id notify-send "Moved to $ws3" -t 1000
bindsym $mod+Shift+p move container to workspace number $ws4; workspace $ws4; exec --no-startup-id notify-send "Moved to $ws4" -t 1000

# % 7 5 3
bindsym $mod+Shift+percent move container to workspace number $ws5; workspace $ws5; exec --no-startup-id notify-send "Moved to $ws5" -t 1000
bindsym $mod+Shift+7 move container to workspace number $ws6; workspace $ws6; exec --no-startup-id notify-send "Moved to $ws6" -t 1000
bindsym $mod+Shift+5 move container to workspace number $ws7; workspace $ws7; exec --no-startup-id notify-send "Moved to $ws7" -t 1000
bindsym $mod+Shift+3 move container to workspace number $ws8; workspace $ws8; exec --no-startup-id notify-send "Moved to $ws8" -t 1000

bindsym $mod+Shift+a move container to workspace number $ws9; workspace $ws9; exec --no-startup-id notify-send "Moved to $ws9" -t 1000
bindsym $mod+Shift+o move container to workspace number $ws10; workspace $ws10; exec --no-startup-id notify-send "Moved to $ws10" -t 1000

# 7 5 3 1 9 0 2 4 6 8
# [ { } ( = * ) + ] !



# switch to workspace
bindsym $mod+asterisk workspace number $ws10

#  ;  ,  .  p
bindsym $mod+semicolon workspace number $ws1
bindsym $mod+comma workspace number $ws2
bindsym $mod+period workspace number $ws3
bindsym $mod+p workspace number $ws4

# & [ { } (
bindsym $mod+ampersand workspace number $ws5
bindsym $mod+bracketleft workspace number $ws6
bindsym $mod+braceleft workspace number $ws7
bindsym $mod+braceright workspace number $ws8

bindsym $mod+a workspace number $ws9
bindsym $mod+o workspace number $ws10

# Screenshots
bindsym $mod+n mode "screenshot"
mode "screenshot" {
        bindsym p exec --no-startup-id maim "/home/$USER/dwn/img/wpp/$(date).png"
        bindsym $mod+p exec --no-startup-id maim --window $(xdotool getactivewindow) "/home/$USER/dwn/img/wpp/$(date).png"
        bindsym $mod+Shift+p exec --no-startup-id maim --select "/home/$USER/dwn/img/wpp/$(date).png"; exec --no-startup-id notify-send "Screenshot taken" -t 5000

        ## Clipboard Screenshots
        #bindsym $mod+p
        #bindsym Ctrl+Print exec --no-startup-id maim | xclip -selection clipboard -t image/png
        #bindsym Ctrl+$mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
        #bindsym Ctrl+Shift+Print exec --no-startup-id maim --select | xclip -selection clipboard -t image/png
        # back to normal: Enter or Escape or $mod+n
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+n mode "default"

}




# # # # # # #
# = Modes = #
# # # # # # #



# resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {

        # These bindings trigger as soon as you enter the resize mode
        bindsym h resize grow width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink width 10 px or 10 ppt
        bindsym j resize shrink height 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Left resize shrink width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}



# # # # # # #
# = State = #
# # # # # # #


# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+s restart

# enter fullscreen mode for the focused container
bindsym $mod+u fullscreen toggle

# start a terminal
bindsym $mod+Return exec kitty

# start rofi (a program launcher)
bindsym $mod+e exec /home/god/.config/polybar/shapes/scripts/launcher.sh

# reload the configuration file
bindsym $mod+Shift+r reload

# kill focused window
bindsym $mod+Shift+q kill

# split in horizontal orientation
bindsym $mod+w split h

# split in vertical orientation
bindsym $mod+v split v

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+z focus parent



# # # # # # #
# = Gaps =  #
# # # # # # #



set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)

# enter gaps mode
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

# # # # # # #
# = Audio = #
# # # # # # #


bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle
